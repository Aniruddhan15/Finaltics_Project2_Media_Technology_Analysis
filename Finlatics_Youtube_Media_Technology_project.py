# -*- coding: utf-8 -*-
"""DSProject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xEp7ddpUQL3ErFVTy0K8VEN4pvACIBC1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data= pd.read_csv('/content/Global YouTube Statistics.csv', encoding='latin-1')

data.info()

"""1.	What are the top 10 YouTube channels based on the number of subscribers?"""

top_10_channels = data.nlargest(10, 'subscribers')[['Youtuber', 'subscribers']]
top_10_channels

top_10_channels = data.nlargest(10, 'subscribers')[['Youtuber', 'subscribers']]

plt.figure(figsize=(12, 6))
sns.barplot(data=top_10_channels, x='subscribers', y='Youtuber', palette='viridis')
plt.title('Top 10 YouTube Channels by Number of Subscribers')
plt.xlabel('Subscribers')
plt.ylabel('YouTube Channel')
plt.show()

"""2.	Which category has the highest average number of subscribers?"""

category = data.groupby('category')['subscribers'].mean().idxmax()
category

category_avg_subs = data.groupby('category')['subscribers'].mean().sort_values(ascending=False)
plt.figure(figsize=(12, 6))
sns.barplot(x=category_avg_subs.index, y=category_avg_subs.values, palette='viridis')
plt.title('Average Number of Subscribers by Category')
plt.xlabel('Category')
plt.ylabel('Average Number of Subscribers')
plt.xticks(rotation=90)
plt.show()

"""3.	How many videos, on average, are uploaded by YouTube channels in each category?"""

avg = data.groupby('category')['uploads'].mean()
avg

avg_uploads_per_category = data.groupby('category')['uploads'].mean().sort_values(ascending=False)

plt.figure(figsize=(12, 6))
sns.barplot(x=avg_uploads_per_category.index, y=avg_uploads_per_category.values, palette='viridis')
plt.title('Average Number of Videos Uploaded by Category')
plt.xlabel('Category')
plt.ylabel('Average Number of Videos')
plt.xticks(rotation=90)
plt.show()

"""4.	What are the top 5 countries with the highest number of YouTube channels?"""

top_5 = data['Country'].value_counts().head(5)
top_5

top_5_countries = data['Country'].value_counts().head(5)
plt.figure(figsize=(12, 6))
sns.barplot(x=top_5_countries.index, y=top_5_countries.values, palette='viridis')
plt.title('Top 5 Countries with the Highest Number of YouTube Channels')
plt.xlabel('Country')
plt.ylabel('Number of Channels')
plt.show()

"""5.	What is the distribution of channel types across different categories?"""

gdata = data.groupby(['category', 'channel_type'])['category'].count()
gdata

plt.figure(figsize=(12, 8))
gdata.plot(kind='bar', stacked=True)
plt.title('Distribution of Channel Types Across Categories')
plt.xlabel('Category')
plt.ylabel('Count of Channels')
plt.legend(title='Channel Type', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()

"""6.	Is there a correlation between the number of subscribers and total video views for YouTube channels?"""

correlation = data[['subscribers', 'video views']].corr()
correlation

correlation_subs_views = data[['subscribers', 'video views']].corr()
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_subs_views, annot=True, cmap='viridis')
plt.title('Correlation between Number of Subscribers and Total Video Views')
plt.show()

"""7.	How do the monthly earnings vary throughout different categories?"""

df = data.iloc[:, [4, 15, 16]]
df_long = df.melt(id_vars='category', var_name='Group', value_name='M_Earnings')
data7 = df.sort_values('highest_monthly_earnings')
print(data7)
plt.figure(figsize=(10, 6))
sns.barplot(x='category', y='M_Earnings', hue='Group', data=df_long, palette='muted')
plt.show()

"""8.	What is the overall trend in subscribers gained in the last 30 days across all channels?"""

sns.boxplot(y='subscribers_for_last_30_days', data=data)
plt.title('Box Plot for subscribers gained')
plt.show()

"""9.	Are there any outliers in terms of yearly earnings from YouTube channels?"""

sns.boxplot(y='lowest_yearly_earnings', data=data)
plt.title('LYearly earnings of Youtube Channels')
plt.show()

sns.boxplot(y='highest_yearly_earnings', data=data)
plt.title('HYearly earnings of Youtube Channels')
plt.show()

df9 = data.iloc[:, [1, 17]]
data9 = df9.groupby('Youtuber').sum()
print(data9.sort_values('lowest_yearly_earnings').tail(1))

df9 = data.iloc[:, [1, 18]]
data9 = df9.groupby('Youtuber').sum()
print(data9.sort_values('highest_yearly_earnings').tail(1))

"""10.	What is the distribution of channel creation dates? Is there any trend over time?"""

df10 = data.iloc[:, [20, 21]]
data10 = df10.groupby('created_year')['created_month'].count()
plt.xlabel('Year')
plt.ylabel('Channels Created')
plt.plot(data10.index, data10.values)
plt.show()

"""11.	Is there a relationship between gross tertiary education enrollment and the number of YouTube channels in a country?"""

df11 = data.iloc[:, [1,9,23]]
data11 = df11.groupby('Abbreviation')['Gross tertiary education enrollment (%)'].mean()
data111 = df11.groupby('Abbreviation')['Youtuber'].count()
print(df11.groupby('Abbreviation').value_counts())
plt.scatter(data111.values, data11.values)
plt.ylabel('Mean GTEE(%)')
plt.xlabel('Youtubers')
plt.show()

"""12.	How does the unemployment rate vary among the top 10 countries with the highest number of YouTube channels?"""

top_10_countries = data['Country'].value_counts().head(10).index
top_10_df = data[data['Country'].isin(top_10_countries)]
plt.figure(figsize=(12, 6))
sns.barplot(data=top_10_df, x='Country', y='Unemployment rate')
plt.title('Unemployment Rate among Top 10 Countries with Highest Number of YouTube Channels')
plt.xticks(rotation=90)
plt.show()

"""13.	What is the average urban population percentage in countries with YouTube channels?"""

data['Urban_population'] = data['Urban_population'].fillna(0)
print(data.groupby('Country')['Urban_population'].mean())

plt.figure(figsize=(12, 6))
sns.barplot(data=data, x='Country', y='Urban_population')
plt.xticks(rotation=90)
plt.title('Average Urban Population Percentage in Countries with YouTube Channels')
plt.show()

"""14.	Are there any patterns in the distribution of YouTube channels based on latitude and longitude coordinates?"""

d = data.groupby('Latitude')['Youtuber'].count()
d1 = data.groupby('Longitude')['Youtuber'].count()
print(d)
print(d1)
plt.plot(d.index, d.values)
plt.xlabel('Latitude')
plt.ylabel('No. of Yotuber')
plt.show()
plt.plot(d1.index, d1.values)
plt.ylabel('No. of Yotuber')
plt.xlabel('Longitude')
plt.show()

"""15.	What is the correlation between the number of subscribers and the population of a country?"""

d= data.groupby('Country')['subscribers'].sum()
d1 = data.groupby('Country')['Urban_population'].sum()
data1 = pd.DataFrame({'subscribers': d, 'Urban_population': d1})
corr_matrix = data1.corr()
plt.figure(figsize=(5, 4))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
plt.show()

"""16.	How do the top 10 countries with the highest number of YouTube channels compare in terms of their total population?"""

dd = data.groupby('Country')['Youtuber'].count()
sorted_h = dd.sort_values(ascending=False)
sorted_h = sorted_h.head(10)
indexes = sorted_h.index.tolist()
desired_n = d1.loc[indexes]
plt.figure(figsize=(12, 6))
data3 = pd.DataFrame({'Country': sorted_h.index, 'Population': desired_n})
sns.barplot(x='Country', y='Population', data=data3)
plt.show()

"""17.	Is there a correlation between the number of subscribers gained in the last 30 days and the unemployment rate in a country?"""

d = data.groupby('Country')['subscribers_for_last_30_days'].sum()
dd = data.groupby('Country')['Unemployment rate'].mean()
data17 = pd.DataFrame({'subscribers_gained_past30days': d, 'U_Rate': dd})
corr_matrix = data17.corr()
plt.figure(figsize=(5, 4))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
plt.show()

"""18.	How does the distribution of video views for the last 30 days vary across different channel types?"""

sns.boxplot(y='video_views_for_the_last_30_days', data=data)
plt.title('Box Plot for video views of last 30 days across different Youtube channels')
plt.show()

"""19.	Are there any seasonal trends in the number of videos uploaded by YouTube channels?"""

print(data.groupby('Youtuber')['video_views_for_the_last_30_days'].sum())
print(data.groupby('Youtuber')['subscribers_for_last_30_days'].sum())

"""20.	What is the average number of subscribers gained per month since the creation of YouTube channels till now?"""

value = data['subscribers'].sum()
total_months = 12*(2024-2005)
print("The average subscribed gained is",value/total_months)